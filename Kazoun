--a
 -- 
 repeat wait() until game:IsLoaded()
 local vu = game:GetService("VirtualUser")
 game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(3)
    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
 end)

 local userInputService = game:GetService("UserInputService")
    
 -- Gui to Lua
 -- Version: 3.2
 
 -- Instances:
 
 local ScreenGui = Instance.new("ScreenGui")
 local Frame = Instance.new("Frame")
 local TextButton = Instance.new("TextButton")
 
 --Properties:
 
 ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
 
 Frame.Parent = ScreenGui
 Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
 Frame.BorderSizePixel = 0
 Frame.Position = UDim2.new(0.274711221, 0, 0.26566416, 0)
 Frame.Size = UDim2.new(0, 66, 0, 50)
 
 TextButton.Parent = Frame
 TextButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
 TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
 TextButton.BorderSizePixel = 0
 TextButton.Position = UDim2.new(-0.0131674102, 0, -0.0143359378, 0)
 TextButton.Size = UDim2.new(0, 66, 0, 50)
 TextButton.Font = Enum.Font.SourceSans
 TextButton.Text = "OFF SCRIPT"
 TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
 TextButton.TextSize = 14.000
 
 -- Scripts:
 
 local function SJSY_fake_script() -- TextButton.LocalScript 
     local script = Instance.new('LocalScript', TextButton)
 
     local button = script.Parent
     
     button.MouseButton1Click:Connect(function()
         getgenv().FruitBattlegrounds = false
     end)
     
 end
 coroutine.wrap(SJSY_fake_script)()

 
 local Player = game.Players.LocalPlayer
 local vim = game:GetService("VirtualInputManager")
 local inset1, inset2 = game:GetService('GuiService'):GetGuiInset()
 local insetOffset = inset1 - inset2

getgenv().FruitBattlegrounds = true;
getgenv().Ammount = 20

 while task.wait(.1) do 
     if FruitBattlegrounds == true then 
         pcall(function()
	if game.Workspace.Characters.Players:FindFirstChild(game.Players.LocalPlayer.Name) == nil then  -- Menu
        local part =game:GetService("Players").LocalPlayer.PlayerGui.UI.MainMenu.Buttons.Play
        local topLeft = part.AbsolutePosition + insetOffset
        local center = topLeft + (part.AbsoluteSize/2)
        local X = center.X + 30
        local Y = center.Y
          vim:SendMouseButtonEvent(X, Y, 0, true, game, 0)
          task.wait()
          vim:SendMouseButtonEvent(X, Y, 0, false, game, 0)
	elseif game.Workspace.Characters.Players:FindFirstChild(game.Players.LocalPlayer.Name) then 

        if getgenv().Ammount >= Player.Character.Stats:GetAttribute("Stamina") then 
            Player.Character.Humanoid.Health = 0
          end

          Player.Character.HumanoidRootPart.CFrame = CFrame.new(-323.617798, 557.921387, -1409.63855, 0.555497468, -1.6509567e-08, 0.831518233, -7.00516978e-09, 1, 2.45345451e-08, -0.831518233, -1.94538039e-08, 0.555497468);
    
        local numbers = {}
        for _, v in pairs(game.Players.LocalPlayer.PlayerGui.UI.Hotbar:GetChildren()) do
            if v:IsA("TextButton") and tonumber(v.Name) and v:FindFirstChild("Requirement") and v.Requirement.Visible == false then
        local keyMap = {
            ["1"] = Enum.KeyCode.One,
            ["2"] = Enum.KeyCode.Two,
            ["3"] = Enum.KeyCode.Three,
            ["4"] = Enum.KeyCode.Four,
            ["5"] = Enum.KeyCode.Five,
            ["6"] = Enum.KeyCode.Six,
        }
        local keyCode = keyMap[v.Name]
        if keyCode then
            table.insert(numbers, keyCode)
        end
    end
end


for _, keyCode in pairs(numbers) do
    game:GetService("VirtualInputManager"):SendKeyEvent(true, keyCode, false, game)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, keyCode, false, game)
  task.wait(1)
    vim:SendMouseButtonEvent(0, 0, 0, true, game, 0)
    task.wait()
    vim:SendMouseButtonEvent(0, 0, 0, false, game, 0)
  task.wait(2)
end

    end
    end)
        else
            wait()
            break
        end 
    end 
